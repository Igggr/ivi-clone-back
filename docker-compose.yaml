version: "3"
services:

  postgres_film:
    container_name: postgres_film
    image: postgres:latest
    ports:
      - "5435:5432"
    volumes:
      - ./db_data/film/postgres/:/var/lib/postgresql/data
      - ./db_data/film/run/postgres.sock:/var/run/postgres/postgres.sock
    env_file:
    - docker.film_db.env
    networks:
    - postgres_film
  
  postgres_profile:
    container_name: postgres_profile
    image: postgres:latest
    ports:
    - "5434:5432"
    volumes:
    # таблицы и их содержимое
    - ./db_data/profile/postgres/:/var/lib/postgresql/data
    - ./db_data/profile/run/postgres.sock:/var/run/postgres/postgres.sock
    env_file:
    - docker.profile_db.env
    networks:
    - postgres_profile
  
  postgres_auth:
    container_name: postgres_auth
    image: postgres:latest
    ports:
    - "5433:5432"
    volumes:
    # таблицы и их содержимое
    - ./db_data/auth/postgres:/var/lib/postgresql/data
    - ./db_data/auth/run/postgres.sock:/var/run/postgres/postgres.sock
    env_file:
    - docker.auth_db.env
    networks:
    - postgres_auth

  postgres_file:
    container_name: postgres_file
    image: postgres:latest
    ports:
    - "5437:5432"
    volumes:
    # таблицы и их содержимое
    - ./db_data/file/postgres:/var/lib/postgresql/data
    - ./db_data/file/run/postgres.sock:/var/run/postgres/postgres.sock
    env_file:
    - docker.file_db.env
    networks:
    - postgres_file

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
    - "8080:80"
    volumes:
    - ./db_data/pgadmin:/root/.pgadmin
    env_file:
    - docker.pgadmin.env
    networks:
    - postgres_film
    - postgres_auth
    - postgres_profile
    - postgres_file

  rabbit:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    restart: always
    ports:
      - 15672:15672
      - 5672:5672 # AMQP порт
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - rabbit

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
        - redis
  
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    command: npm run start:dev api
    depends_on:
      - rabbit
    ports:
      - '3000:3000'
    networks:
      - rabbit

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8082:8080"
    depends_on:
      - api
    volumes:
      - ./swagger.json:/swagger.json
    environment:
      SWAGGER_JSON: /swagger.json

networks:
  postgres_film:
    driver: bridge
  postgres_auth:
    driver: bridge
  postgres_profile:
    driver: bridge
  postgres_file:
    driver: bridge
  rabbit:
    driver: bridge